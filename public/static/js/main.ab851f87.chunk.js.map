{"version":3,"sources":["shared/hooks/auth-hook.js","shared/context/auth-context.js","shared/home/project/AboutUs.js","shared/hooks/http-hook.js","shared/context/global-context.js","shared/UIElements/Modal.js","shared/UIElements/ErrorModal.js","shared/home/project/consumerGoods/ConsumerGoodsItem.js","shared/home/project/consumerGoods/ConsumerGoodsList.js","shared/home/project/consumerGoods/ConsumerGoodsContainer.js","shared/home/project/consumerGoods/ConsumerGoodsLook.js","shared/home/project/bulk/BulkItem.js","shared/home/project/bulk/BulkList.js","shared/home/project/bulk/BulkContainer.js","shared/home/project/bulk/BulkLook.js","admin/chat/MessageBoardsList.js","consumer/customerLogin/Login.js","consumer/customerLogin/Signup.js","consumer/customerLogin/WelcomeContainer.js","consumer/customerChat/ChatItem.js","consumer/customerChat/ChatList.js","img/opaque_spinner.gif","shared/UIElements/LoadingSpinner.js","admin/addAnItem/AddItemContainer.js","admin/chat/MessagesList.js","shared/home/NavBar.js","shared/home/HomePage.js","admin/adminLogin/LoginContainer.js","admin/chat/MessagesCountainer.js","consumer/customerChat/CustomerChatBox.js","consumer/customerDetails/DetailsContainer.js","App.js","reportWebVitals.js","index.js"],"names":["logoutTimer","AuthContext","createContext","isLoggedIn","userId","token","login","logout","customerIsLoggedIn","customerId","customerToken","customerLogin","customerLogout","AboutUs","auth","useContext","className","onClick","useHttpClient","useState","isLoading","setIsLoading","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","GlobalContext","deleteModal","undefined","ModalOverlay","props","content","style","headerClass","header","onSubmit","event","preventDefault","contentClass","children","footerClass","footer","ReactDOM","createPortal","document","getElementById","Modal","CSSTransition","in","show","mountOnEnter","unmountOnExit","timeout","classNames","ErrorModal","onCancel","onClear","ConsumerGoodsItem","navigate","useNavigate","deleteMod","setDeleteMod","dString","setDString","description","length","deleteAnItem","process","_id","Authorization","window","location","reload","deleteModalTrig","deleteModalFalse","src","bucketPhotoId","alt","name","substring","price","ConsumerGoodsList","items","map","x","ConsumerGoodsContainer","globalC","consumerGoodsList","setConsumerGoodsList","fetchcg","findConsumerItems","context","ConsumerGoodsLook","BulkItem","BulkList","BulkContainer","bulk","setBulk","fetchBulk","findBulk","console","log","BulkLook","MessageBoardsList","Login","useForm","register","handleSubmit","loginSubmit","data","JSON","stringify","email","password","Signup","WelcomeContainer","toggleEntry","setToggleEntry","theToggle","ChatItem","sender","ChatList","messages","reverse","LoadingSpinner","asOverlay","loading","AddItemContainer","file","setFile","previewUrl","setPreviewUrl","setIsValid","typeToggle","setTypeToggle","fileReader","FileReader","onload","result","readAsDataURL","pickedHandler","pickedfile","target","files","bulkName","bulkDescription","bulkPrice","image","bulkImage","reset","isSubmitSuccessful","formState","submitConsumerItem","formData","FormData","append","submitBulkItem","toggleFunc","type","accept","onChange","MessagesList","NavBar","to","HomePage","LoginContainer","username","MessagesCountainer","messageBoards","setMessageBoards","fetchMessageBoards","findMessages","CustomerChatBox","setMessages","fetchMessages","findMessageBoard","submitAMessage","err","DetailsContainer","App","route","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","uid","expirationDate","Date","getTime","localStorage","setItem","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","setCustomerToken","customerTokenExpirationDate","setCustomerTokenExpirationDate","setCustomerId","useAuth","path","element","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.ab851f87.chunk.js","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n    const [token, setToken] = useState(false);\n    const [tokenExpirationDate, setTokenExpirationDate] = useState();\n    const [userId, setUserId] = useState(false);\n\n\n    const login = useCallback((uid, token, expirationDate) => {\n        setToken(token);\n        setUserId(uid);\n\n        const tokenExpirationDate =\n            expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60 * 24);\n        setTokenExpirationDate(tokenExpirationDate);\n        localStorage.setItem(\n            'userData',\n            JSON.stringify({\n                userId: uid,\n                token: token,\n                expiration: tokenExpirationDate.toISOString()\n            })\n        );\n    }, []);\n\n    const logout = useCallback(() => {\n        setToken(null);\n        setTokenExpirationDate(null);\n        setUserId(null);\n        localStorage.removeItem('userData');\n    }, []);\n\n    useEffect(() => {\n        if (token && tokenExpirationDate) {\n            const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n            logoutTimer = setTimeout(logout, remainingTime);\n        } else {\n            clearTimeout(logoutTimer);\n        }\n    }, [token, logout, tokenExpirationDate]);\n\n    useEffect(() => {\n        const storedData = JSON.parse(localStorage.getItem('userData'));\n        if (\n            storedData &&\n            storedData.token &&\n            new Date(storedData.expiration) > new Date()\n        ) {\n            login(storedData.userId, storedData.token, new Date(storedData.expiration));\n        }\n    }, [login]);\n\n\n    const [customerToken, setCustomerToken] = useState(false);\n    const [customerTokenExpirationDate, setCustomerTokenExpirationDate] = useState();\n    const [customerId, setCustomerId] = useState(false);\n\n    const customerLogin = useCallback((uid, token, expirationDate) => {\n        setCustomerToken(token);\n        setCustomerId(uid);\n        const tokenExpirationDate =\n            expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60 *24);\n        setCustomerTokenExpirationDate(tokenExpirationDate);\n        localStorage.setItem(\n            'customerData',\n            JSON.stringify({\n                customerId: uid,\n                customerToken: token,\n                expiration: tokenExpirationDate.toISOString()\n            })\n        );\n    }, []);\n\n    const customerLogout = useCallback(() => {\n        setCustomerToken(null);\n        setCustomerTokenExpirationDate(null);\n        setCustomerId(null);\n        localStorage.removeItem('customerData');\n    }, []);\n\n    useEffect(() => {\n        if (customerToken && customerTokenExpirationDate) {\n            const remainingTime = customerTokenExpirationDate.getTime() - new Date().getTime();\n            logoutTimer = setTimeout(customerLogout, remainingTime);\n        } else {\n            clearTimeout(logoutTimer);\n        }\n    }, [customerToken, customerLogout, customerTokenExpirationDate]);\n\n    useEffect(() => {\n        const storedData = JSON.parse(localStorage.getItem('customerData'));\n        if (\n            storedData &&\n            storedData.customerToken &&\n            new Date(storedData.expiration) > new Date()\n        ) {\n            customerLogin(storedData.customerId, storedData.customerToken, new Date(storedData.expiration));\n        }\n    }, [customerLogin]);\n\n\n\n\n    return { token, login, logout, userId, customerToken, customerLogin, customerLogout, customerId };\n};","import { createContext } from \"react\"\n\nexport const AuthContext = createContext({\n    isLoggedIn: false,\n    userId: null,\n    token: null,\n    login: () => { },\n    logout: () => { },\n    customerIsLoggedIn: false,\n    customerId: null,\n    customerToken: null,\n    customerLogin: () => {},\n    customerLogout: () => {}\n\n})","import React, { useContext } from 'react'\n\nimport { AuthContext } from '../../context/auth-context'\n\nimport '../../../css/style.css'\n\nconst AboutUs = () => {\n\n\n    const auth = useContext(AuthContext)\n\n\n    return (\n        <div className=\"logout\">\n            <label onClick={auth.logout}>logout</label>\n        </div>\n    )\n}\n\nexport default AboutUs\n","import { useState, useCallback, useRef, useEffect } from \"react\";\n\nexport const useHttpClient = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState();\n\n    const activeHttpRequests = useRef([]);\n\n    const sendRequest = useCallback(\n        async (url, method = \"GET\", body = null, headers = {}) => {\n            setIsLoading(true);\n            const httpAbortCtrl = new AbortController();\n            activeHttpRequests.current.push(httpAbortCtrl);\n\n            try {\n                const response = await fetch(url, {\n                    method,\n                    body,\n                    headers,\n                    signal: httpAbortCtrl.signal,\n                });\n\n                const responseData = await response.json();\n\n                activeHttpRequests.current = activeHttpRequests.current.filter(\n                    (reqCtrl) => reqCtrl !== httpAbortCtrl\n                );\n\n                if (!response.ok) {\n                    throw new Error(responseData.message);\n                }\n\n                setIsLoading(false);\n                return responseData;\n            } catch (err) {\n                setError(err.message);\n                setIsLoading(false);\n                throw err;\n            }\n        },\n        []\n    );\n\n    const clearError = () => {\n        setError(null);\n    };\n\n    useEffect(() => {\n        return () => {\n            activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\n        };\n    }, []);\n\n    return { isLoading, error, sendRequest, clearError };\n};","import { createContext } from \"react\"\n\nexport const GlobalContext = createContext({\n    \n    deleteModal: undefined\n\n})","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { CSSTransition } from \"react-transition-group\"\n\n\nconst ModalOverlay = (props) => {\n    const content = (\n        <div className={`modal ${props.className}`} style={props.style}>\n            <header className={`modal__header ${props.headerClass}`}>\n                <h2>{props.header}</h2>\n            </header>\n            <form\n                onSubmit={\n                    props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\n                }\n            >\n                <div className={`modal__content ${props.contentClass}`}>\n                    {props.children}\n                </div>\n                <footer className={`modal__footer ${props.footerClass}`}>\n                    {props.footer}\n                </footer>\n            </form>\n        </div>\n    );\n\n    return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\n}\n\nconst Modal = (props) => {\n    return (\n\n        <CSSTransition\n            in={props.show}\n            mountOnEnter\n            unmountOnExit\n            timeout={200}\n            classNames=\"modal\"\n        >\n            <ModalOverlay {...props} />\n        </CSSTransition>\n\n    )\n}\n\nexport default Modal","import React from \"react\"\n\nimport Modal from \"./Modal\"\n\nconst ErrorModal = props => {\n\n    return (\n        <Modal\n            onCancel={props.onClear}\n            header=\"An Error Occurred!\"\n            show={!!props.error}\n            footer={<button onClick={props.onClear}> okay </button>}\n        >\n            <p>{props.error}</p>\n        </Modal>\n    )\n}\n\nexport default ErrorModal","import React, {useEffect, useState, useContext} from 'react'\n\nimport { useHttpClient } from '../../../hooks/http-hook'\n\nimport \"../../../../css/style.css\"\n\nimport { AuthContext } from '../../../context/auth-context'\n\nimport {GlobalContext} from \"../../../context/global-context\"\n\nimport {useNavigate} from 'react-router-dom';\nimport ErrorModal from '../../../UIElements/ErrorModal'\n\n\nconst ConsumerGoodsItem = (props) => {\n\n\n    const navigate = useNavigate();\n\n    const { isLoading, error, sendRequest, clearError } = useHttpClient()\n\n    const globalC = useContext(GlobalContext)\n\n\n    const auth = useContext(AuthContext)\n\n\n    // const [image, setImage] = useState()\n\n\n    // useEffect(() => {\n\n    //     const fetchcg = async () => {\n    //         try {\n    //             const responseData = await sendRequest(\n    //                 `https://michaelrossbucket.s3.us-east-1.amazonaws.com/${props.bucketPhotoId}`,\n                \n                    \n    //             )\n                \n    //             setImage(responseData)\n    //             console.log(responseData.findConsumerItems)\n    //         } catch (err) {\n    \n    //         }\n    //     }\n\n    //     fetchcg()\n\n        \n\n    // },[sendRequest, props.bucketPhotoId])\n\n\n    const [deleteMod, setDeleteMod] = useState(false)\n\n    const [dString, setDString] = useState(false)\n\n    \n\n    useEffect(() => {\n        if(props.description.length >= 45){\n            setDString(true)\n        }\n    },[props.description])\n\n    const deleteAnItem = async () => {\n\n                 try {\n                        await sendRequest(\n                            `${process.env.REACT_APP_BACKEND_URL}/admin/deleteConsumerItem/${props._id}`,\n                            \"DELETE\",\n                            null,\n                            {\n                \n                                Authorization: 'Bearer ' + auth.token \n                            }\n                        \n                            \n                        )\n\n                        window.location.reload();\n                        navigate('/consumerGoods')\n\n                        \n                        \n    \n                    } catch (err) {\n            \n                    }\n\n\n    }\n\n    const deleteModalTrig = async () => {\n\n        setDeleteMod(true)\n\n\n    }\n\n    const deleteModalFalse = async () => {\n\n        setDeleteMod(false)\n       \n        \n        // globalC({deleteModal:\"trigger\"})\n        // console.log(globalC)\n\n\n    }\n\n    return (\n        <div className=\"consumerGoods--card\">\n            <ErrorModal\n            error={error} onClear={clearError}\n            />\n\n            \n            <img className=\"consumerGoods--card-img\" src={`https://s3.us-east-1.amazonaws.com/michaelrossbucket/${props.bucketPhotoId}`} alt={props.description}/>\n\n            <div className=\"consumerGoods--card-text\">\n                <p>{props.name}</p>\n                {!dString &&\n                props.description.substring(0, 45)\n                \n                }\n                { dString &&\n                \n\n                <p>{props.description.substring(0, 45)} ...</p>}\n                <p>${props.price}</p>\n\n            </div>\n\n            <div>\n                \n                <div className=\"consumerGoods--card-adminText-button\" onClick={deleteModalTrig} >delete</div>\n                {deleteMod &&\n                <div>\n                <div>are you sure you would like to delete this?</div>\n   \n                <div onClick={deleteAnItem}>yes</div>\n                <div onClick={deleteModalFalse}>no</div>\n                \n                </div>\n                \n                }\n            </div>\n        </div>\n    )\n}\n\nexport default ConsumerGoodsItem\n","import React from 'react'\n\nimport '../../../../css/style.css'\nimport ConsumerGoodsItem from './ConsumerGoodsItem'\n\nconst ConsumerGoodsList = (props) => {\n\n\n\n\n\n    return (\n        <div className=\"consumerGoods\">\n            { props.items &&\n            props.items.map(x => \n                <ConsumerGoodsItem\n                key={x._id}\n                _id={x._id}\n                name={x.name}\n                description={x.description}\n                price={x.price}\n                bucketPhotoId={x.bucketPhotoId}\n\n                />\n                )\n            }\n        </div>\n    )\n}\n\nexport default ConsumerGoodsList\n","import React, { useEffect, useState, useContext } from 'react'\n\n\nimport { useHttpClient } from '../../../hooks/http-hook'\nimport ConsumerGoodsList from './ConsumerGoodsList'\n\nimport { GlobalContext } from '../../../context/global-context'\n\nimport \"../../../../css/style.css\"\n\nconst ConsumerGoodsContainer = () => {\n\n    const { isLoading, error, sendRequest, clearError } = useHttpClient()\n\n    const globalC = useContext(GlobalContext)\n\n\n    const [consumerGoodsList, setConsumerGoodsList] = useState()\n\n\n    useEffect(() => {\n\n        const fetchcg = async () => {\n            try {\n                const responseData = await sendRequest(\n                    `${process.env.REACT_APP_BACKEND_URL}/admin/getConsumerItems`,\n                \n                    \n                )\n                \n                setConsumerGoodsList(responseData.findConsumerItems)\n    \n            } catch (err) {\n    \n            }\n        }\n\n        fetchcg()\n\n        \n\n    },[sendRequest, globalC.context])\n\n\n\n\n\n    return (\n        <div className=\"consumerGoods-block\">\n            { consumerGoodsList &&\n            <ConsumerGoodsList\n            items={consumerGoodsList}\n            />}\n        </div>\n    )\n}\n\nexport default ConsumerGoodsContainer\n","import React from 'react'\n\nconst ConsumerGoodsLook = () => {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n\nexport default ConsumerGoodsLook\n","import React, {useEffect, useState, useContext} from 'react'\n\nimport { useHttpClient } from '../../../hooks/http-hook'\n\nimport { AuthContext } from '../../../context/auth-context'\n\nimport {useNavigate} from 'react-router-dom';\nimport ErrorModal from '../../../UIElements/ErrorModal'\n\nimport \"../../../../css/style.css\"\n\n\nconst BulkItem = (props) => {\n\n\n\n    const { isLoading, error, sendRequest, clearError } = useHttpClient()\n\n\n\n    const navigate = useNavigate();\n\n    const auth = useContext(AuthContext)\n\n\n\n    const [dString, setDString] = useState(false)\n\n\n    useEffect(() => {\n        if(props.description.length >= 45){\n            setDString(true)\n        }\n    },[props.description])\n\n    const deleteAnItem = async () => {\n\n        try {\n               await sendRequest(\n                   `${process.env.REACT_APP_BACKEND_URL}/admin/deleteBulk/${props._id}`,\n                   \"DELETE\",\n                   null,\n                   {\n       \n                       Authorization: 'Bearer ' + auth.token \n                   }\n               \n                   \n               )\n\n               window.location.reload();\n               navigate('/consumerGoods')\n\n               \n               \n\n           } catch (err) {\n   \n           }\n\n\n}\n\nconst [deleteMod, setDeleteMod] = useState(false)\n\n\nconst deleteModalTrig = async () => {\n\n    setDeleteMod(true)\n\n\n}\n\nconst deleteModalFalse = async () => {\n\n    setDeleteMod(false)\n   \n    \n    // globalC({deleteModal:\"trigger\"})\n    // console.log(globalC)\n\n\n}\n\n\n\n    return (\n        <div className=\"consumerGoods--card\">\n            <ErrorModal\n            error={error} onClear={clearError}\n            />\n\n            \n            <img className=\"consumerGoods--card-img\" src={`https://s3.us-east-1.amazonaws.com/michaelrossbucket/${props.bucketPhotoId}`} alt={props.description}/>\n\n            <div className=\"consumerGoods--card-text\">\n                <p>{props.name}</p>\n                {!dString &&\n                props.description.substring(0, 45)\n                \n                }\n                { dString &&\n                \n\n                <p>{props.description.substring(0, 45)} ...</p>}\n                <p>${props.price}</p>\n\n            </div>\n\n            <div>\n                \n                <div className=\"consumerGoods--card-adminText-button\" onClick={deleteModalTrig} >delete</div>\n                {deleteMod &&\n                <div>\n                <div>are you sure you would like to delete this?</div>\n   \n                <div onClick={deleteAnItem}>yes</div>\n                <div onClick={deleteModalFalse}>no</div>\n                \n                </div>\n                \n                }\n            </div>\n        </div>\n    )\n}\n\nexport default BulkItem\n","import React from 'react'\n\nimport \"../../../../css/style.css\"\nimport BulkItem from './BulkItem'\n\n\n\n\nconst BulkList = (props) => {\n    return (\n        <div className=\"consumerGoods\">\n\n        {props.items &&\n        props.items.map(x => \n            <BulkItem\n            key={x._id}\n            _id={x._id}\n            name={x.name}\n            description={x.description}\n            price={x.price}\n            bucketPhotoId={x.bucketPhotoId}\n            />\n            )\n        }            \n\n\n\n        </div>\n    )\n}\n\nexport default BulkList\n","import React, {useEffect, useState} from 'react'\n\n\nimport { useHttpClient } from '../../../hooks/http-hook'\nimport BulkList from './BulkList'\n\nimport \"../../../../css/style.css\"\n\n\nconst BulkContainer = () => {\n\n    const { isLoading, error, sendRequest, clearError } = useHttpClient()\n\n\n\n    const [bulk, setBulk] = useState()\n\n\n\n    useEffect(() => {\n\n        const fetchBulk = async () => {\n            try {\n                const responseData = await sendRequest(\n                    `${process.env.REACT_APP_BACKEND_URL}/admin/getBulk`,\n                \n                    \n                )\n                \n                setBulk(responseData.findBulk)\n                console.log(responseData.findBulk)\n            } catch (err) {\n    \n            }\n        }\n\n        fetchBulk()\n\n        \n\n    },[sendRequest])\n\n\n\n\n\n\n    return (\n        <div className=\"consumerGoods-block\">\n            {bulk &&\n            <BulkList\n            items={bulk}\n            />\n            }\n        </div>\n    )\n}\n\nexport default BulkContainer\n","import React from 'react'\n\nconst BulkLook = () => {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n\nexport default BulkLook\n","import React from 'react'\nimport MessageBoardsItem from './MessageBoardsItem'\n\nconst MessageBoardsList = (props) => {\n    return (\n        <div>\n            {\n                props.items &&\n                props.items.map(x => {\n                    <MessageBoardsItem\n                    key={x._id}\n                    \n\n                    />\n                })\n            }\n        </div>\n    )\n}\n\nexport default MessageBoardsList\n","import React, {useContext} from 'react'\n\nimport { useForm } from \"react-hook-form\"\n\nimport {useHttpClient} from \"../../shared/hooks/http-hook\"\n\nimport {AuthContext} from \"../../shared/context/auth-context\"\nimport ErrorModal from '../../shared/UIElements/ErrorModal'\n\nconst Login = () => {\n\n    const auth = useContext(AuthContext)\n\n    const { isLoading, error, sendRequest, clearError } = useHttpClient()\n\n    const { register, handleSubmit } = useForm()\n\n\n    const loginSubmit = async (data) => {\n\n        try {\n            const responseData = await sendRequest(\n                `${process.env.REACT_APP_BACKEND_URL}/customer/login`,\n                \"POST\",\n                JSON.stringify({\n                    email: data.email,\n                    password: data.password,\n                    \n                }),\n                {\n                    \"Content-Type\": \"application/json\"\n                }\n            )\n            auth.customerLogin(responseData.customerId, responseData.customerToken)\n        } catch (err) {\n\n        }\n\n\n    }\n\n\n    return (\n        <div>\n            <ErrorModal \n            error={error} onClear={clearError}\n            />\n\n            <form onSubmit={handleSubmit(loginSubmit)}>\n                <input {...register(\"email\")}/>\n\n                <input {...register(\"password\")}/>\n                <button>login</button>\n                \n            </form>\n            \n        </div>\n    )\n}\n\nexport default Login\n","import React from 'react'\n\nconst Signup = () => {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n\nexport default Signup\n","import React, { useState } from 'react'\n\nimport \"../../css/style.css\"\nimport Login from './Login'\nimport Signup from './Signup'\n\nconst WelcomeContainer = () => {\n\n\n    const [toggleEntry, setToggleEntry] = useState(true)\n\n\n    const theToggle = () => {\n        if(toggleEntry === true){\n            setToggleEntry(false)\n        }else if(toggleEntry === false){\n            setToggleEntry(true)\n        }\n    }\n\n\n    return (\n        <div className=\"welcome\">\n\n        <div className=\"welcome--intro\">\n            <h1>\n                Welcome!\n            </h1>\n            <p> Here at example.com we value your patronage. Login to save card details, edit delivery details, and chat about incoming orders. Thanks for shopping with us!</p>\n\n        </div>\n\n        {\n            toggleEntry &&\n            <div className=\"welcome--welcome\">\n            <Login/>\n            <p className=\"welcome--welcome--text\">did you mean <div onClick={theToggle}>signup?</div></p>\n            </div>\n        }\n        {\n            !toggleEntry &&\n            <div className=\"welcome--welcome\">\n            <Signup/> \n            <p className=\"welcome--welcome--text\">did you mean <div onClick={theToggle}>login?</div></p>\n            </div>\n        }\n            \n        </div>\n    )\n}\n\nexport default WelcomeContainer\n","import React, { useContext } from 'react'\n\nimport { AuthContext } from '../../shared/context/auth-context'\n\nconst ChatItem = (props) => {\n\n\n    const auth= useContext(AuthContext)\n\n    console.log(props.sender)\n    console.log(auth.customerId)\n    \n\n\n    return (\n        <div>\n            { auth.customerId === props.sender &&\n                <div>me</div>}\n            { !auth.customerId === props.sender &&\n                \n                <div>buyz</div>}\n            <div>{props.message}</div>\n        </div>\n    )\n}\n\nexport default ChatItem\n","import React from 'react'\nimport ChatItem from './ChatItem'\n\nconst ChatList = (props) => {\n    return (\n        <div className=\"customerMessage-messages\">\n            {\n                props.messages.map(x => \n                    <ChatItem\n                    key={x._id}\n                    sender={x.sender}\n                    message={x.message}\n                    />\n                    ).reverse()\n            }\n            \n        </div>\n    )\n}\n\nexport default ChatList\n","export default __webpack_public_path__ + \"static/media/opaque_spinner.95c33229.gif\";","import React from \"react\"\nimport loading from \"../../img/opaque_spinner.gif\"\n\n\n\nconst LoadingSpinner = props => {\n    return (\n        <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n            <img src={loading} alt=\"spinner\" />\n        </div>\n    );\n}\n\nexport default LoadingSpinner","import React, { useRef, useEffect, useState, useContext } from 'react'\n\n\nimport {useHttpClient} from \"../../shared/hooks/http-hook\"\n\nimport {AuthContext} from \"../../shared/context/auth-context\"\n\nimport { useForm } from \"react-hook-form\"\n\n\n\nimport ErrorModal from '../../shared/UIElements/ErrorModal'\nimport LoadingSpinner from '../../shared/UIElements/LoadingSpinner'\n\n\nimport \"../../css/style.css\"\nimport { set } from 'mongoose'\n\n\nconst AddItemContainer = () => {\n\n    const [file, setFile] = useState();\n    const [previewUrl, setPreviewUrl] = useState();\n    const [isValid, setIsValid] = useState(false)\n\n\n    const [typeToggle, setTypeToggle] = useState(true)\n\n\n    const filePickerRef = useRef()\n\n    useEffect(() => {\n        if(!file) {\n            return\n        }\n        const fileReader = new FileReader()\n        fileReader.onload = () => {\n            setPreviewUrl(fileReader.result)\n        }\n        fileReader.readAsDataURL(file)\n    }, [file])\n\n    const pickedHandler = event => {\n        let pickedfile\n        let fileIsValid = isValid\n        if(event.target.files || event.target.files.length === 1) {\n            pickedfile = event.target.files[0];\n            setFile(pickedfile);\n            setIsValid(true)\n            fileIsValid = true\n        } else {\n            setIsValid(false)\n            fileIsValid = false\n        }\n        \n    }\n\n    const pickImageHandler = () => {\n        filePickerRef.current.click()\n    }\n\n    \n\n\n    const auth = useContext(AuthContext)\n\n    const { register, handleSubmit, reset,formState: { isSubmitSuccessful }  } = useForm({name: \"\", price: 0, description: \"\", bulkName:\"\", bulkDescription:\"\", bulkPrice:0, image:null, bulkImage:null })\n\n\n    useEffect(() => {\n        if (isSubmitSuccessful) {\n            reset({name: \"\", price: 0, description: \"\", bulkName:\"\", bulkDescription:\"\", bulkPrice:0 });\n          }\n          setPreviewUrl(null)\n    },\n    [reset, isSubmitSuccessful])\n\n    const { isLoading, error, sendRequest, clearError } = useHttpClient()\n\n\n    const [toggleItem, setToggleItem] = useState()\n\n    \n\n\n    const submitConsumerItem = async (data) => {\n\n    \n        console.log(data.name)\n        console.log(data)\n        try {\n\n        \n    \n   \n            //const fileContent = fs.readFileSync(data.image[0])\n            const formData = new FormData();\n            formData.append(\"bucketPhotoId\", data.image[0])\n            formData.append(\"name\", data.name)\n            formData.append(\"description\", data.description)\n            formData.append(\"price\", data.price)\n\n           \n\n\n            await sendRequest(\n                `${process.env.REACT_APP_BACKEND_URL}/admin/createConsumerItem`,\n                \"POST\",\n                // JSON.stringify({\n                //     name: data.name,\n                //     description: data.description,\n                //     price: data.price,\n                //     bucketPhotoId: data.image[0]\n                    \n                // }),\n\n                 formData,\n\n                \n                {\n                    //\"Content-Type\": \"application/json\",\n                    Authorization: 'Bearer ' + auth.token \n                }\n            )\n            \n        } catch (err) {\n            \n        }\n\n\n    }\n\n    const submitBulkItem = async (data) => {\n\n    \n        \n        try {\n\n        \n    \n   \n            //const fileContent = fs.readFileSync(data.image[0])\n            const formData = new FormData();\n            formData.append(\"bucketPhotoId\", data.bulkImage[0])\n            formData.append(\"name\", data.bulkName)\n            formData.append(\"description\", data.bulkDescription)\n            formData.append(\"price\", data.bulkPrice)\n\n           \n\n\n            await sendRequest(\n                `${process.env.REACT_APP_BACKEND_URL}/admin/createBulkItem`,\n                \"POST\",\n                // JSON.stringify({\n                //     name: data.name,\n                //     description: data.description,\n                //     price: data.price,\n                //     bucketPhotoId: data.image[0]\n                    \n                // }),\n\n                 formData,\n\n                \n                {\n                    //\"Content-Type\": \"application/json\",\n                    Authorization: 'Bearer ' + auth.token \n                }\n            )\n            \n        } catch (err) {\n            console.log(err)\n        }\n\n\n    }\n\n\n    const toggleFunc = () => {\n        if(typeToggle === true){\n            setTypeToggle(false)\n            \n        }else{\n            setTypeToggle(true)\n            \n        }\n    }\n\n\n\n    return (\n        <div className=\"addItem\">\n            <div className=\"addItem-block\">\n            <ErrorModal\n            error={error} onClear={clearError}\n            />\n            {isLoading &&\n            <LoadingSpinner asOverlay/>}\n\n            \n            \n            {typeToggle &&<div className=\"addItem-box\">\n            <div className=\"textsize\" onClick={toggleFunc}>🔁</div>\n            <div className=\"addItem-title\" >    \n            \n            <h2 >consumer good</h2>\n            </div>\n            <form className=\"addItem-form\" onSubmit={handleSubmit(submitConsumerItem)}>\n                <div className=\"addItem-inputs\">\n                \n                <input   {...register(\"image\")} type=\"file\" accept=\".jpg,.png,.jpeg\" onChange={pickedHandler}/>\n                {/* <button type=\"button\" onClick={pickImageHandler}> pick image</button> */}\n                <div>\n                \n                </div>\n                <br/>\n                \n                <br/>\n                <label>product</label>\n                <br/>\n                <input  {...register(\"name\")}/>\n                <br/>\n                <label>description</label>\n                <br/>\n                <textarea {...register(\"description\")}/>\n                <br/>\n                <label>price</label>\n                <br/>\n                <input {...register(\"price\")} type=\"number\"/>\n                <br/>\n                <button >submit</button>\n                </div>\n                {previewUrl && <img className=\"image-upload__preview\" src={previewUrl} alt=\"preview\"/> }\n          \n            </form>\n           \n\n            \n            </div>}\n\n            {!typeToggle &&\n\n<div className=\"addItem-box\">\n<div className=\"textsize\" onClick={toggleFunc}>🔁</div>\n    <div className=\"addItem-title\">\n\n         <h2>bulk</h2>\n         </div>\n<form className=\"addItem-form\" onSubmit={handleSubmit(submitBulkItem)}>\n    <div className=\"addItem-inputs\">\n    \n    <input   {...register(\"bulkImage\")} type=\"file\" accept=\".jpg,.png,.jpeg\" onChange={pickedHandler}/>\n    {/* <button type=\"button\" onClick={pickImageHandler}> pick image</button> */}\n    <div>\n    \n    </div>\n    <br/>\n    \n    <br/>\n    <label>product</label>\n    <br/>\n    <input  {...register(\"bulkName\")}/>\n    <br/>\n    <label>description</label>\n    <br/>\n    <textarea {...register(\"bulkDescription\")}/>\n    <br/>\n    <label>price</label>\n    <br/>\n    <input {...register(\"bulkPrice\")} type=\"number\"/>\n    <br/>\n    <button onClick={() => reset()}>submit</button>\n    </div>\n    {previewUrl && <img className=\"image-upload__preview\" src={previewUrl} alt=\"preview\"/> }\n\n</form>\n\n\n\n</div>\n\n            }\n            </div>\n            \n        </div>\n    )\n}\n\nexport default AddItemContainer\n","import React from 'react'\n\nconst MessagesList = () => {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n\nexport default MessagesList\n","import React, {useContext} from 'react'\n\nimport \"../../css/style.css\"\n\nimport { NavLink } from \"react-router-dom\";\n\n\n\nimport {AuthContext} from \"../context/auth-context\"\nconst NavBar = () => {\n\n\n    const auth = useContext(AuthContext)\n\n\n\n    return (\n        <div className=\"navbar\">\n            <div className=\"navbar--left\">\n            {   (!auth.isLoggedIn && !auth.customerIsLoggedIn)  &&\n                <NavLink to=\"/\">about us</NavLink>}\n\n{\n                    auth.isLoggedIn &&\n                    <div>\n                    <NavLink className=\"nav--left-aboutUs\" to=\"/\">about us</NavLink>\n                    \n                    \n                    </div>\n               \n                }\n            </div>\n            <div className=\"navbar--right\">\n                <NavLink className=\"navbar--right-bulk\" to=\"/bulkItems\">bulk</NavLink>\n                <NavLink className=\"navbar--right-retail\" to=\"/consumerGoods\">retail</NavLink>\n                {   (!auth.isLoggedIn && !auth.customerIsLoggedIn)  &&\n                <NavLink className=\"navbar--right-login\" to=\"/welcome\">login</NavLink>}\n                { auth.customerIsLoggedIn &&\n                <NavLink className=\"navbar--right-login\" to=\"/details\">details</NavLink>\n                }\n                { auth.customerIsLoggedIn &&\n                <NavLink className=\"navbar--right-login\" to=\"/yourMessages\">inbox</NavLink>\n                }\n\n                {\n                    auth.isLoggedIn &&\n                    <NavLink className=\"navbar--right-login\" to=\"/addItem\">add</NavLink>\n                }\n                {\n                    auth.isLoggedIn &&\n                    <NavLink className=\"navbar--right-login\" to=\"/messages\">inbox</NavLink>\n                }\n                {/* {\n                    auth.isLoggedIn &&\n                    \n                <div className=\"logout\" onClick={auth.logout}>x</div>\n                } */}\n\n            </div>\n        </div>\n    )\n}\n\nexport default NavBar\n","import React from 'react'\nimport NavBar from './NavBar'\n\nconst HomePage = (props) => {\n    return (\n        <div>\n            <NavBar/>\n            {props.children}\n        </div>\n    )\n}\n\nexport default HomePage\n","import React, {useContext} from 'react'\n\nimport { useForm } from \"react-hook-form\"\n\nimport {useHttpClient} from \"../../shared/hooks/http-hook\"\n\nimport {AuthContext} from \"../../shared/context/auth-context\"\nimport ErrorModal from \"../../shared/UIElements/ErrorModal\"\n\nimport \"../../css/style.css\"\n\nconst LoginContainer = () => {\n\n    const auth = useContext(AuthContext)\n\n    const { isLoading, error, sendRequest, clearError } = useHttpClient()\n\n    const { register, handleSubmit } = useForm()\n\n\n    const loginSubmit = async (data) => {\n\n        try {\n            const responseData = await sendRequest(\n                `${process.env.REACT_APP_BACKEND_URL}/admin/login`,\n                \"POST\",\n                JSON.stringify({\n                    username: data.username,\n                    password: data.password,\n                    \n                }),\n                {\n                    \"Content-Type\": \"application/json\"\n                }\n            )\n            auth.login(responseData.userId, responseData.token)\n        } catch (err) {\n\n        }\n\n\n    }\n\n\n\n    return (\n        <div className=\"michaelLogin\">\n        <div className=\"michaelLogin-background\">\n        <ErrorModal \n        error={error} onClear={clearError}\n        />\n\n        <form onSubmit={handleSubmit(loginSubmit)}>\n\n            <div className=\"michaelLogin-input-top\">\n            <label className=\"michaelLogin-input\">😁</label>\n            <label className=\"michaelLogin-input\">username</label>\n            <input className=\"michaelLogin-input\" {...register(\"username\")}/>\n            <label className=\"michaelLogin-input\">password</label>\n            <input className=\"michaelLogin-input\" {...register(\"password\")} type=\"password\"/>\n            <button>login</button>\n\n            </div>\n            \n        </form>\n        \n    </div>\n    </div>\n    )\n}\n\nexport default LoginContainer\n","import React, {useContext, useEffect, useState} from 'react'\n\n\nimport { useHttpClient } from '../../shared/hooks/http-hook'\n\nimport { AuthContext } from '../../shared/context/auth-context'\n\n\n\n\nimport MessageBoardsList from './MessageBoardsList'\n\n\n\nconst MessagesCountainer = () => {\n\n\n    const auth = useContext(AuthContext)\n\n    const { isLoading, error, sendRequest, clearError } = useHttpClient()\n\n    const [messageBoards, setMessageBoards] = useState()\n\n    useEffect(() => {\n\n        const fetchMessageBoards = async () => {\n            try {\n                const responseData = await sendRequest(\n                    `${process.env.REACT_APP_BACKEND_URL}/admin/getMessages`,\n                    \"GET\",\n                    null,\n                    {\n                        //\"Content-Type\": \"application/json\",\n                        Authorization: 'Bearer ' + auth.token \n                    }\n\n                \n                    \n                )\n                \n                setMessageBoards(responseData.findMessages)\n          \n            } catch (err) {\n    \n            }\n        }\n\n        fetchMessageBoards()\n\n        \n\n    },[sendRequest, auth.token])\n\n\n    return (\n        <div>\n            <MessageBoardsList\n            items={messageBoards}\n            />\n            \n        </div>\n    )\n}\n\nexport default MessagesCountainer\n","import React, {useContext, useEffect, useState} from 'react'\n\n\nimport { useHttpClient } from '../../shared/hooks/http-hook'\nimport { useForm } from \"react-hook-form\"\n\n\nimport { AuthContext } from '../../shared/context/auth-context'\nimport ChatList from './ChatList'\nimport ErrorModal from '../../shared/UIElements/ErrorModal'\n\nconst CustomerChatBox = () => {\n\n    const auth = useContext(AuthContext)\n\n    const { isLoading, error, sendRequest, clearError } = useHttpClient()\n    \n    const { register, handleSubmit, reset,formState: { isSubmitSuccessful }  } = useForm({message: ''})\n\n\n    useEffect(() => {\n        if (isSubmitSuccessful) {\n          reset({message:\"\"})\n        }\n          \n    },\n    [reset, isSubmitSuccessful])\n\n    const [messages, setMessages] = useState()\n\n\n\n    useEffect(() => {\n\n        const fetchMessages = async () => {\n            try {\n                const responseData = await sendRequest(\n                    `${process.env.REACT_APP_BACKEND_URL}/customer/getMessages`,\n                    \"GET\",\n                    null,\n                    {\n                        //\"Content-Type\": \"application/json\",\n                        Authorization: 'Bearer ' + auth.customerToken \n                    }\n\n                )\n\n                setMessages(responseData.findMessageBoard.messages)\n                console.log(responseData.findMessageBoard.messages)\n                //window.scrollTo(0, 99999)\n            } catch (err) {\n                \n            }\n        }\n\n        fetchMessages();\n\n\n\n        \n\n    }, [sendRequest, auth.customerToken])\n\n    const submitAMessage = async (data) => {\n\n        try {\n            sendRequest(\n                `${process.env.REACT_APP_BACKEND_URL}/customer/postMessage`,\n                \"POST\",\n                JSON.stringify({\n                    message: data.messages,\n                     \n                    \n                }),\n                {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: 'Bearer ' + auth.customerToken\n\n                }\n            )\n        } catch (err) {\n            \n        }\n\n        const fetchMessages = async () => {\n            try {\n                const responseData = await sendRequest(\n                    `${process.env.REACT_APP_BACKEND_URL}/customer/getMessages`,\n                    \"GET\",\n                    null,\n                    {\n                        //\"Content-Type\": \"application/json\",\n                        Authorization: 'Bearer ' + auth.customerToken \n                    }\n\n                )\n\n                setMessages(responseData.findMessageBoard.messages)\n                console.log(responseData.findMessageBoard.messages)\n                //window.scrollTo(0, 99999)\n            } catch (err) {\n                \n            }\n        }\n\n        fetchMessages();\n\n    }\n\n\n    return (\n        <div className=\"customerMessage\">\n            <ErrorModal\n            error={error} onClear={clearError}\n            />\n            { messages &&\n                \n                <ChatList \n            messages={messages}\n            />}\n            <div className=\"customerMessage-items\">\n\n            </div>\n\n\n            \n\n            \n            \n\n            <div className=\"customerMessage-form-border\">\n            \n\n            <form className=\"customerMessage-form\"  onSubmit={handleSubmit(submitAMessage)}>\n\n                <div className=\"customerMessage-form-form\">\n              \n                <button className=\"customerMessage-form-button\">submit</button>\n                <div className=\"customerMessage-form-textArea\">\n                <textarea className=\"customerMessage-form-textArea-input\"/>\n                </div>\n                \n                </div>\n\n            </form>\n            </div>\n        </div>\n    )\n}\n\nexport default CustomerChatBox\n","import React, { useContext } from 'react'\n\n\nimport { AuthContext } from '../../shared/context/auth-context'\n\n\n\nconst DetailsContainer = () => {\n\n\n    const auth = useContext(AuthContext)\n\n\n    \n\n    return (\n        <div>\n            <div onClick={auth.customerLogout}> logout</div>\n        </div>\n    )\n}\n\nexport default DetailsContainer\n","import React, { useState } from 'react'\n\n\nimport { BrowserRouter as Router, Redirect, Route, Routes } from \"react-router-dom\"\nimport { AuthContext } from \"./shared/context/auth-context\"\nimport { useAuth } from './shared/hooks/auth-hook';\nimport { NavLink } from \"react-router-dom\";\nimport AboutUs from './shared/home/project/AboutUs';\nimport ConsumerGoodsContainer from './shared/home/project/consumerGoods/ConsumerGoodsContainer';\nimport ConsumerGoodsLook from './shared/home/project/consumerGoods/ConsumerGoodsLook';\nimport BulkContainer from './shared/home/project/bulk/BulkContainer';\nimport BulkLook from './shared/home/project/bulk/BulkLook';\nimport MessageBoardsList from './admin/chat/MessageBoardsList';\nimport ConsumerGoodsList from './shared/home/project/consumerGoods/ConsumerGoodsList';\nimport BulkList from './shared/home/project/bulk/BulkList';\nimport WelcomeContainer from './consumer/customerLogin/WelcomeContainer';\nimport ChatList from './consumer/customerChat/ChatList';\nimport Details from './consumer/customerDetails/Details';\nimport AddItemContainer from './admin/addAnItem/AddItemContainer';\nimport MessagesList from './admin/chat/MessagesList';\nimport HomePage from './shared/home/HomePage';\nimport LoginContainer from './admin/adminLogin/LoginContainer';\nimport MessagesCountainer from './admin/chat/MessagesCountainer';\nimport CustomerChatBox from './consumer/customerChat/CustomerChatBox';\nimport DetailsContainer from './consumer/customerDetails/DetailsContainer';\n\n\n\nconst App = () => {\n\n  const { token, login, logout, userId, customerToken, customerLogin, customerLogout, customerId } = useAuth();\n\n\n  \n\n\n\n  let route \n\n  if(token){\n route = (\n    <Routes>\n      <Route path=\"/messages\" element={<MessagesCountainer/>} />\n      <Route path=\"/messages/:md\" element={<MessagesList/>}/>\n      <Route path=\"/addItem\" element={<AddItemContainer/>} />\n      \n      \n      <Route path=\"/\" element={<AboutUs/>} />\n      <Route path=\"/consumerGoods\" element={<ConsumerGoodsContainer/>} />\n      <Route path=\"/consumerGoods/:cgId\" element={<ConsumerGoodsLook/>}/>\n      <Route path=\"/bulkItems\" element={<BulkContainer/>} />\n      <Route path=\"/bulkItems/:biId\" element={<BulkLook/>}/>\n\n      <Route path=\"*\" element={<AboutUs/>}/>\n    </Routes>\n )\n\n  }else if(customerToken){\n    route = (\n    <Routes>\n \n\n      <Route path=\"/yourMessages\" element={<CustomerChatBox/>} />\n      <Route path=\"/details\" element={<DetailsContainer/>} />\n\n      <Route path=\"/\" element={<AboutUs/>} />\n      <Route path=\"/consumerGoods\" element={<ConsumerGoodsContainer/>} />\n      <Route path=\"/consumerGoods/:cgId\" element={<ConsumerGoodsLook/>}/>\n      <Route path=\"/bulkItems\" element={<BulkContainer/>} />\n      <Route path=\"/bulkItems/:biId\" element={<BulkLook/>}/>\n      \n      <Route path=\"*\" element={<AboutUs/>}/>\n    </Routes>\n    )\n  }else{\n    route = (<Routes>\n      <Route path=\"/\" element={<AboutUs/>} />\n      <Route path=\"/michaelross\" element={<LoginContainer/>}/>\n      \n      <Route path=\"/consumerGoods\" element={<ConsumerGoodsContainer/>} />\n      <Route path=\"/consumerGoods/:cgId\" element={<ConsumerGoodsLook/>}/>\n      <Route path=\"/bulkItems\" element={<BulkContainer/>} />\n      <Route path=\"/bulkItems/:biId\" element={<BulkLook/>}/>\n      <Route path=\"/welcome\" element={<WelcomeContainer/>}/>\n      <Route path=\"*\" element={<AboutUs/>}/>\n    </Routes> )\n  }\n\n\n  return (\n    <AuthContext.Provider\n    value={{ isLoggedIn: !!token, token: token, userId: userId, login: login, logout: logout, customerIsLoggedIn: !!customerToken, customerToken: customerToken, customerId: customerId, customerLogin: customerLogin, customerLogout: customerLogout }}\n  \n    >\n      \n      <Router>\n        <HomePage>\n      \n        {route}\n        </HomePage>\n      </Router>\n      </AuthContext.Provider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}